import axios from 'axios';
import API_CONFIG from '../config/api';

export const LogoutApi = () => {
  return async (dispatch) => {
    const performLogout = async () => {
      try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô sessionStorage ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const storedToken = sessionStorage.getItem('token');
        const storedRefreshToken = sessionStorage.getItem('refreshToken');
        
        if (!storedToken || !storedRefreshToken) {
          console.warn('No token found for logout');
          return;
        }

        const userToken = JSON.parse(storedToken);
        const refreshTokenValue = JSON.parse(storedRefreshToken);
        
        console.log('üö™ Logging out user:', userToken.Login);
        
        // ‚úÖ ‡πÉ‡∏ä‡πâ API_CONFIG ‡πÅ‡∏•‡∏∞ path ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        const res = await axios.post(`${API_CONFIG.BASE_URL}/api/auth/logout`, {
          username: userToken.Login,
          token: refreshTokenValue
        });
        
        console.log('‚úÖ Logout successful:', res.data);
        return res.data;
        
      } catch (error) {
        console.error('‚ùå Error during logout:', error);
        // ‡πÅ‡∏°‡πâ logout API ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡πá‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á clear session
      } finally {
        // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î session storage ‡πÄ‡∏™‡∏°‡∏≠
        sessionStorage.clear();
      }
    };

    try {
      await performLogout();
    } catch (error) {
      console.error('Logout process failed:', error);
      // ‡πÅ‡∏°‡πâ‡πÄ‡∏Å‡∏¥‡∏î error ‡∏Å‡πá‡∏¢‡∏±‡∏á clear session
      sessionStorage.clear();
    }
  };
};